<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zmap.zmap.mapper.PatientRegistrationMapper">
  <resultMap id="BaseResultMap" type="com.zmap.zmap.model.PatientRegistration">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="original_id" jdbcType="VARCHAR" property="originalId" />
    <result column="registration_number" jdbcType="INTEGER" property="registrationNumber" />
    <result column="registration_time" jdbcType="DATE" property="registrationTime" />
    <result column="doctor_id" jdbcType="VARCHAR" property="doctorId" />
    <result column="serviceDepartment_id" jdbcType="VARCHAR" property="servicedepartmentId" />
    <result column="patient_card_number" jdbcType="VARCHAR" property="patientCardNumber" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="update_time" jdbcType="DATE" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, original_id, registration_number, registration_time, doctor_id, serviceDepartment_id, 
    patient_card_number, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.zmap.zmap.model.PatientRegistrationExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from patientregistration
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <insert id="insert" parameterType="com.zmap.zmap.model.PatientRegistration">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into patientregistration (id, original_id, registration_number, 
      registration_time, doctor_id, serviceDepartment_id, 
      patient_card_number, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{originalId,jdbcType=VARCHAR}, #{registrationNumber,jdbcType=INTEGER}, 
      #{registrationTime,jdbcType=DATE}, #{doctorId,jdbcType=VARCHAR}, #{servicedepartmentId,jdbcType=VARCHAR}, 
      #{patientCardNumber,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zmap.zmap.model.PatientRegistration">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into patientregistration
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="originalId != null">
        original_id,
      </if>
      <if test="registrationNumber != null">
        registration_number,
      </if>
      <if test="registrationTime != null">
        registration_time,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="servicedepartmentId != null">
        serviceDepartment_id,
      </if>
      <if test="patientCardNumber != null">
        patient_card_number,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="originalId != null">
        #{originalId,jdbcType=VARCHAR},
      </if>
      <if test="registrationNumber != null">
        #{registrationNumber,jdbcType=INTEGER},
      </if>
      <if test="registrationTime != null">
        #{registrationTime,jdbcType=DATE},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=VARCHAR},
      </if>
      <if test="servicedepartmentId != null">
        #{servicedepartmentId,jdbcType=VARCHAR},
      </if>
      <if test="patientCardNumber != null">
        #{patientCardNumber,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
</mapper>